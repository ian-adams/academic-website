<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>6002 | Ian T. Adams</title>
    <link>https://ianadamsresearch.com/tag/6002/</link>
      <atom:link href="https://ianadamsresearch.com/tag/6002/index.xml" rel="self" type="application/rss+xml" />
    <description>6002</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>©`2021`</copyright><lastBuildDate>Mon, 18 Jan 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://ianadamsresearch.com/images/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_2.png</url>
      <title>6002</title>
      <link>https://ianadamsresearch.com/tag/6002/</link>
    </image>
    
    <item>
      <title>Which Model do I use?</title>
      <link>https://ianadamsresearch.com/courses/pubpl-6002/which-model/</link>
      <pubDate>Mon, 18 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://ianadamsresearch.com/courses/pubpl-6002/which-model/</guid>
      <description>
&lt;script src=&#34;https://ianadamsresearch.com/courses/pubpl-6002/which-model/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://ianadamsresearch.com/courses/pubpl-6002/which-model/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://ianadamsresearch.com/courses/pubpl-6002/which-model/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;


&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This is a very constrained, simple table to help students decide what type of statistical modeling is appropriate for their research question and data set.&lt;/p&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:table&#34;&gt;Table 1: &lt;/span&gt;Which Model Do I Use?
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Comparing
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Dependent (outcome) Variable
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Independent (explanatory) variable
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Parametric Test (normally distributed data)
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
Non-parametric test (ordinal or skewed data)
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr grouplength=&#34;4&#34;&gt;
&lt;td colspan=&#34;5&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;Single Comparison Tests&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left; padding-left:  2em;&#34; indentlevel=&#34;1&#34;&gt;
Averages of two independent groups
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Scale
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nominal (Binary)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Independent t-test
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Mann-Whitney test/ Wilcoxon rank sum
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left; padding-left:  2em;&#34; indentlevel=&#34;1&#34;&gt;
Averages of 3+ independent groups
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Scale
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nominal
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
One-way ANOVA
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kruskal-Wallis test
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left; padding-left:  2em;&#34; indentlevel=&#34;1&#34;&gt;
The average difference between paired (matched) samples e.g. test scores before and after a class
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Scale
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Time or Condition variable
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Paired t-test
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Wilcoxon signed rank test
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left; padding-left:  2em;&#34; indentlevel=&#34;1&#34;&gt;
The 3+ measurements on the same subject
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Scale
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Time or Condition variable
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Repeated measures ANOVA
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Friedman test
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr grouplength=&#34;6&#34;&gt;
&lt;td colspan=&#34;5&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;Association Tests&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left; padding-left:  2em;&#34; indentlevel=&#34;1&#34;&gt;
Relationship between 2 continuous variables
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Scale
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Scale
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Pearson’s Correlation Coefficient
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Spearman’s Correlation Coefficient
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left; padding-left:  2em;&#34; indentlevel=&#34;1&#34;&gt;
What is value of DV when value of IV changes?
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Scale
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Any
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Simple Linear Regression
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Transform the data
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left; padding-left:  2em;&#34; indentlevel=&#34;1&#34;&gt;
What is value of DV when value of IV changes?
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nominal (Binary)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Any
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Logistic regression
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left; padding-left:  2em;&#34; indentlevel=&#34;1&#34;&gt;
What is value of DV when value of IV changes?
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nominal (Count)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Any
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Poisson Regression
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left; padding-left:  2em;&#34; indentlevel=&#34;1&#34;&gt;
What is value of DV when value of IV changes?
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nominal (Count, overdispersed)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Any
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Negative Binomial Regression
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left; padding-left:  2em;&#34; indentlevel=&#34;1&#34;&gt;
Assessing the relationship between two categorical variables
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Categorical
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Categorical
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Chi-squared test
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Chapter 3</title>
      <link>https://ianadamsresearch.com/courses/pubpl-6002/chapter-3/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://ianadamsresearch.com/courses/pubpl-6002/chapter-3/</guid>
      <description>
&lt;script src=&#34;https://ianadamsresearch.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;One of the wonderful features of the R statistical universe is the number of free, high-quality instructional materials available. Throughout the remainder of the course, we will be learning and working from the R for Data Science book (you’ll see this book shorthanded as R4DS in this course and all over the web), by two giants of the R space: Hadley Wickham and Garrett Grolemund . This is a free book, available here . If you prefer a hardcopy, you can order one from a number of sources as well, including at Amazon.&lt;/p&gt;
&lt;p&gt;As you read through the assigned chapters, the authors have included a variety of practical exercises to introduce you to R, with a focus on the “tidyverse,” a collection of statistical packages that make exploring, analyzing, visualizing, and communicating data a more enjoyable, replicable, and easy-to-learn process. Some of these exercises will be assigned, but we also highly recommend you complete the exercises as you read through the book! These exercises are quite short, and usually have the coded answers built right into the book, so you can copy/paste right into RStudio and see the solution.&lt;/p&gt;
&lt;div id=&#34;data-visualization-exercises&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Visualization Exercises&lt;/h2&gt;
&lt;p&gt;Always remember to load your tidyverse library!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Attaching packages --------------------------------------- tidyverse 1.3.0 --&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## v ggplot2 3.3.2     v purrr   0.3.4
## v tibble  3.0.4     v dplyr   1.0.2
## v tidyr   1.1.2     v stringr 1.4.0
## v readr   1.4.0     v forcats 0.5.0&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## -- Conflicts ------------------------------------------ tidyverse_conflicts() --
## x dplyr::filter() masks stats::filter()
## x dplyr::lag()    masks stats::lag()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;first-steps&#34; class=&#34;section level2 r4ds-section&#34;&gt;
&lt;h2&gt;First steps&lt;/h2&gt;
&lt;div id=&#34;exercise-3.2.1&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.2.1&#34;&gt;
&lt;h3&gt;Exercise 3.2.1&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Run &lt;code&gt;ggplot(data = mpg)&lt;/code&gt; what do you see?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This code creates an empty plot. The &lt;code&gt;ggplot()&lt;/code&gt; function creates the background of the plot, but since no layers were specified with geom function, nothing is drawn.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.2.2&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.2.2&#34;&gt;
&lt;h3&gt;Exercise 3.2.2&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;How many rows are in &lt;code&gt;mpg&lt;/code&gt;? How many columns?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;There are 234 rows and 11 columns in the &lt;code&gt;mpg&lt;/code&gt; data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;nrow(mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 234&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ncol(mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 11&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;glimpse()&lt;/code&gt; function also displays the number of rows and columns in a data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 234
## Columns: 11
## $ manufacturer &amp;lt;chr&amp;gt; &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;...
## $ model        &amp;lt;chr&amp;gt; &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4 quattro&amp;quot;...
## $ displ        &amp;lt;dbl&amp;gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0,...
## $ year         &amp;lt;int&amp;gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, ...
## $ cyl          &amp;lt;int&amp;gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, ...
## $ trans        &amp;lt;chr&amp;gt; &amp;quot;auto(l5)&amp;quot;, &amp;quot;manual(m5)&amp;quot;, &amp;quot;manual(m6)&amp;quot;, &amp;quot;auto(av)&amp;quot;, &amp;quot;a...
## $ drv          &amp;lt;chr&amp;gt; &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;4&amp;quot;,...
## $ cty          &amp;lt;int&amp;gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17...
## $ hwy          &amp;lt;int&amp;gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25...
## $ fl           &amp;lt;chr&amp;gt; &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;,...
## $ class        &amp;lt;chr&amp;gt; &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;,...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.2.3&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.2.3&#34;&gt;
&lt;h3&gt;Exercise 3.2.3&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What does the &lt;code&gt;drv&lt;/code&gt; variable describe? Read the help for &lt;code&gt;?mpg&lt;/code&gt; to find out.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The &lt;code&gt;drv&lt;/code&gt; variable is a categorical variable which categorizes cars into front-wheels, rear-wheels, or four-wheel drive.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;&#34;f&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Front-wheel_drive&#34;&gt;front-wheel drive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;&#34;r&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Automobile_layout#Rear-wheel-drive_layouts&#34;&gt;rear-wheel drive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;&#34;4&#34;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Four-wheel_drive&#34;&gt;four-wheel drive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.2.4&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.2.4&#34;&gt;
&lt;h3&gt;Exercise 3.2.4&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Make a scatter plot of &lt;code&gt;hwy&lt;/code&gt; vs. &lt;code&gt;cyl&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = cyl, y = hwy)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.2.5&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.2.5&#34;&gt;
&lt;h3&gt;Exercise 3.2.5&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What happens if you make a scatter plot of &lt;code&gt;class&lt;/code&gt; vs &lt;code&gt;drv&lt;/code&gt;? Why is the plot not useful?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The resulting scatterplot has only a few points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = class, y = drv)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;A scatter plot is not a useful display of these variables since both &lt;code&gt;drv&lt;/code&gt; and &lt;code&gt;class&lt;/code&gt; are categorical variables. Since categorical variables typically take a small number of values, there are a limited number of unique combinations of (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) values that can be displayed. In this data, &lt;code&gt;drv&lt;/code&gt; takes 3 values and &lt;code&gt;class&lt;/code&gt; takes 7 values, meaning that there are only 21 values that could be plotted on a scatterplot of &lt;code&gt;drv&lt;/code&gt; vs. &lt;code&gt;class&lt;/code&gt;. In this data, there 12 values of (&lt;code&gt;drv&lt;/code&gt;, &lt;code&gt;class&lt;/code&gt;) are observed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;count(mpg, drv, class)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 12 x 3
##    drv   class          n
##    &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;      &amp;lt;int&amp;gt;
##  1 4     compact       12
##  2 4     midsize        3
##  3 4     pickup        33
##  4 4     subcompact     4
##  5 4     suv           51
##  6 f     compact       35
##  7 f     midsize       38
##  8 f     minivan       11
##  9 f     subcompact    22
## 10 r     2seater        5
## 11 r     subcompact     9
## 12 r     suv           11&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A simple scatter plot does not show how many observations there are for each (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) value. As such, scatterplots work best for plotting a continuous x and a continuous y variable, and when all (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) values are unique.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; The following code uses functions introduced in a later section. Come back to this after reading section &lt;a href=&#34;https://r4ds.had.co.nz/exploratory-data-analysis.html#two-categorical-variables&#34;&gt;7.5.2&lt;/a&gt;, which introduces methods for plotting two categorical variables. The first is &lt;code&gt;geom_count()&lt;/code&gt; which is similar to a scatterplot but uses the size of the points to show the number of observations at an (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) point.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = class, y = drv)) +
  geom_count()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The second is &lt;code&gt;geom_tile()&lt;/code&gt; which uses a color scale to show the number of observations with each (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) value.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mpg %&amp;gt;%
  count(class, drv) %&amp;gt;%
  ggplot(aes(x = class, y = drv)) +
    geom_tile(mapping = aes(fill = n))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In the previous plot, there are many missing tiles. These missing tiles represent unobserved combinations of &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;drv&lt;/code&gt; values. These missing values are not unknown, but represent values of (&lt;code&gt;class&lt;/code&gt;, &lt;code&gt;drv&lt;/code&gt;) where &lt;code&gt;n = 0&lt;/code&gt;. The &lt;code&gt;complete()&lt;/code&gt; function in the tidyr package adds new rows to a data frame for missing combinations of columns. The following code adds rows for missing combinations of &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;drv&lt;/code&gt; and uses the &lt;code&gt;fill&lt;/code&gt; argument to set &lt;code&gt;n = 0&lt;/code&gt; for those new rows.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mpg %&amp;gt;%
  count(class, drv) %&amp;gt;%
  complete(class, drv, fill = list(n = 0)) %&amp;gt;%
  ggplot(aes(x = class, y = drv)) +
    geom_tile(mapping = aes(fill = n))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;aesthetic-mappings&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;3.3 Aesthetic mappings&lt;/h1&gt;
&lt;div id=&#34;exercise-3.3.1&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.3.1&#34;&gt;
&lt;h3&gt;Exercise 3.3.1&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What’s gone wrong with this code? Why are the points not blue?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy, colour = &amp;quot;blue&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The argument&lt;code&gt;colour = &#34;blue&#34;&lt;/code&gt; is included within the &lt;code&gt;mapping&lt;/code&gt; argument, and as such, it is treated as an aesthetic, which is a mapping between a variable and a value. In the expression, &lt;code&gt;colour = &#34;blue&#34;&lt;/code&gt;, &lt;code&gt;&#34;blue&#34;&lt;/code&gt; is interpreted as a categorical variable which only takes a single value &lt;code&gt;&#34;blue&#34;&lt;/code&gt;. If this is confusing, consider how &lt;code&gt;colour = 1:234&lt;/code&gt; and &lt;code&gt;colour = 1&lt;/code&gt; are interpreted by &lt;code&gt;aes()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The following code does produces the expected result.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy), colour = &amp;quot;blue&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.3.2&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.3.2&#34;&gt;
&lt;h3&gt;Exercise 3.3.2&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Which variables in &lt;code&gt;mpg&lt;/code&gt; are categorical? Which variables are continuous? (Hint: type &lt;code&gt;?mpg&lt;/code&gt; to read the documentation for the dataset). How can you see this information when you run &lt;code&gt;mpg&lt;/code&gt;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The following list contains the categorical variables in &lt;code&gt;mpg&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;manufacturer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;model&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trans&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;drv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following list contains the continuous variables in &lt;code&gt;mpg&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;displ&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;year&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cyl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cty&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hwy&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the printed data frame, angled brackets at the top of each column provide type of each variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mpg&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 234 x 11
##    manufacturer model    displ  year   cyl trans   drv     cty   hwy fl    class
##    &amp;lt;chr&amp;gt;        &amp;lt;chr&amp;gt;    &amp;lt;dbl&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt;   &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt;
##  1 audi         a4         1.8  1999     4 auto(l~ f        18    29 p     comp~
##  2 audi         a4         1.8  1999     4 manual~ f        21    29 p     comp~
##  3 audi         a4         2    2008     4 manual~ f        20    31 p     comp~
##  4 audi         a4         2    2008     4 auto(a~ f        21    30 p     comp~
##  5 audi         a4         2.8  1999     6 auto(l~ f        16    26 p     comp~
##  6 audi         a4         2.8  1999     6 manual~ f        18    26 p     comp~
##  7 audi         a4         3.1  2008     6 auto(a~ f        18    27 p     comp~
##  8 audi         a4 quat~   1.8  1999     4 manual~ 4        18    26 p     comp~
##  9 audi         a4 quat~   1.8  1999     4 auto(l~ 4        16    25 p     comp~
## 10 audi         a4 quat~   2    2008     4 manual~ 4        20    28 p     comp~
## # ... with 224 more rows&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Those with &lt;code&gt;&amp;lt;chr&amp;gt;&lt;/code&gt; above their columns are categorical, while those with &lt;code&gt;&amp;lt;dbl&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;int&amp;gt;&lt;/code&gt; are continuous. The exact meaning of these types will be discussed in &lt;a href=&#34;https://jrnold.github.io/r4ds-exercise-solutions/vectors.html&#34;&gt;“Chapter 15: Vectors”&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;glimpse()&lt;/code&gt; is another function that concisely displays the type of each column in the data frame:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(mpg)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 234
## Columns: 11
## $ manufacturer &amp;lt;chr&amp;gt; &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;, &amp;quot;audi&amp;quot;...
## $ model        &amp;lt;chr&amp;gt; &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4&amp;quot;, &amp;quot;a4 quattro&amp;quot;...
## $ displ        &amp;lt;dbl&amp;gt; 1.8, 1.8, 2.0, 2.0, 2.8, 2.8, 3.1, 1.8, 1.8, 2.0, 2.0,...
## $ year         &amp;lt;int&amp;gt; 1999, 1999, 2008, 2008, 1999, 1999, 2008, 1999, 1999, ...
## $ cyl          &amp;lt;int&amp;gt; 4, 4, 4, 4, 6, 6, 6, 4, 4, 4, 4, 6, 6, 6, 6, 6, 6, 8, ...
## $ trans        &amp;lt;chr&amp;gt; &amp;quot;auto(l5)&amp;quot;, &amp;quot;manual(m5)&amp;quot;, &amp;quot;manual(m6)&amp;quot;, &amp;quot;auto(av)&amp;quot;, &amp;quot;a...
## $ drv          &amp;lt;chr&amp;gt; &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;f&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;4&amp;quot;, &amp;quot;4&amp;quot;,...
## $ cty          &amp;lt;int&amp;gt; 18, 21, 20, 21, 16, 18, 18, 18, 16, 20, 19, 15, 17, 17...
## $ hwy          &amp;lt;int&amp;gt; 29, 29, 31, 30, 26, 26, 27, 26, 25, 28, 27, 25, 25, 25...
## $ fl           &amp;lt;chr&amp;gt; &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;, &amp;quot;p&amp;quot;,...
## $ class        &amp;lt;chr&amp;gt; &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;, &amp;quot;compact&amp;quot;,...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For those lists, I considered any variable that was non-numeric was considered categorical and any variable that was numeric was considered continuous. This largely corresponds to the heuristics &lt;code&gt;ggplot()&lt;/code&gt; uses for will interpreting variables as discrete or continuous.&lt;/p&gt;
&lt;p&gt;However, this definition of continuous vs. categorical misses several important cases. Of the numeric variables, &lt;code&gt;year&lt;/code&gt; and &lt;code&gt;cyl&lt;/code&gt; (cylinders) clearly take on discrete values. The variables &lt;code&gt;cty&lt;/code&gt; and &lt;code&gt;hwy&lt;/code&gt; are stored as integers (&lt;code&gt;int&lt;/code&gt;) so they only take on a discrete values. Even though &lt;code&gt;displ&lt;/code&gt; has In some sense, due to measurement and computational constraints all numeric variables are discrete (). But unlike the categorical variables, it is possible to add and subtract these numeric variables in a meaningful way. The typology of &lt;a href=&#34;https://en.wikipedia.org/wiki/Level_of_measurement&#34;&gt;levels of measurement&lt;/a&gt; is one such typology of data types.&lt;/p&gt;
&lt;p&gt;In this case the R data types largely encode the semantics of the variables; e.g. integer variables are stored as integers, categorical variables with no order are stored as character vectors and so on. However, that is not always the case. Instead, the data could have stored the categorical &lt;code&gt;class&lt;/code&gt; variable as an integer with values 1–7, where the documentation would note that 1 = “compact”, 2 = “midsize”, and so on.&lt;a href=&#34;#fn1&#34; class=&#34;footnote-ref&#34; id=&#34;fnref1&#34;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/a&gt; Even though this integer vector could be added, multiplied, subtracted, and divided, those operations would be meaningless.&lt;/p&gt;
&lt;p&gt;Fundamentally, categorizing variables as “discrete”, “continuous”, “ordinal”, “nominal”, “categorical”, etc. is about specifying what operations can be performed on the variables. Discrete variables support counting and calculating the mode. Variables with an ordering support sorting and calculating quantiles. Variables that have an interval scale support addition and subtraction and operations such as taking the mean that rely on these primitives. In this way, the types of data or variables types is an information class system, something that is beyond the scope of R4DS but discussed in &lt;a href=&#34;http://adv-r.had.co.nz/OO-essentials.html#s3&#34;&gt;&lt;em&gt;Advanced R&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.3.3&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.3.3&#34;&gt;
&lt;h3&gt;Exercise 3.3.3&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Map a continuous variable to color, size, and shape. How do these aesthetics behave differently for categorical vs. continuous variables?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The variable &lt;code&gt;cty&lt;/code&gt;, city highway miles per gallon, is a continuous variable.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy, colour = cty)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Instead of using discrete colors, the continuous variable uses a scale that varies from a light to dark blue color.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy, size = cty)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When mapped to size, the sizes of the points vary continuously as a function of their size.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy, shape = cty)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Error: A continuous variable can not be mapped to shape&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When a continuous value is mapped to shape, it gives an error. Though we could split a continuous variable into discrete categories and use a shape aesthetic, this would conceptually not make sense. A numeric variable has an order, but shapes do not. It is clear that smaller points correspond to smaller values, or once the color scale is given, which colors correspond to larger or smaller values. But it is not clear whether a square is greater or less than a circle.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.3.4&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.3.4&#34;&gt;
&lt;h3&gt;Exercise 3.3.4&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What happens if you map the same variable to multiple aesthetics?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy, colour = hwy, size = displ)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In the above plot, &lt;code&gt;hwy&lt;/code&gt; is mapped to both location on the y-axis and color, and &lt;code&gt;displ&lt;/code&gt; is mapped to both location on the x-axis and size. The code works and produces a plot, even if it is a bad one. Mapping a single variable to multiple aesthetics is redundant. Because it is redundant information, in most cases avoid mapping a single variable to multiple aesthetics.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.3.5&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.3.5&#34;&gt;
&lt;h3&gt;Exercise 3.3.5&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What does the stroke aesthetic do? What shapes does it work with? (Hint: use &lt;code&gt;?geom_point&lt;/code&gt;)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;Stroke changes the size of the border for shapes (21-25). These are filled shapes in which the color and size of the border can differ from that of the filled interior of the shape.&lt;/p&gt;
&lt;p&gt;For example&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mtcars, aes(wt, mpg)) +
  geom_point(shape = 21, colour = &amp;quot;black&amp;quot;, fill = &amp;quot;white&amp;quot;, size = 5, stroke = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/ex.3.3.1.5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.3.6&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.3.6&#34;&gt;
&lt;h3&gt;Exercise 3.3.6&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What happens if you map an aesthetic to something other than a variable name, like &lt;code&gt;aes(colour = displ &amp;lt; 5)&lt;/code&gt;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy, colour = displ &amp;lt; 5)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/ex.3.3.1.6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Aesthetics can also be mapped to expressions like &lt;code&gt;displ &amp;lt; 5&lt;/code&gt;. The &lt;code&gt;ggplot()&lt;/code&gt; function behaves as if a temporary variable was added to the data with values equal to the result of the expression. In this case, the result of &lt;code&gt;displ &amp;lt; 5&lt;/code&gt; is a logical variable which takes values of &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This also explains why, in &lt;a href=&#34;#exercise-3.3.1&#34;&gt;Exercise 3.3.1&lt;/a&gt;, the expression &lt;code&gt;colour = &#34;blue&#34;&lt;/code&gt; created a categorical variable with only one category: “blue”.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;facets&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Facets&lt;/h2&gt;
&lt;div id=&#34;exercise-3.5.1&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.5.1&#34;&gt;
&lt;h3&gt;Exercise 3.5.1&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What happens if you facet on a continuous variable?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;Let’s see.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  facet_grid(. ~ cty)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/ex.3.5.1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The continuous variable is converted to a categorical variable, and the plot contains a facet for each distinct value.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.5.2&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.5.2&#34;&gt;
&lt;h3&gt;Exercise 3.5.2&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What do the empty cells in plot with &lt;code&gt;facet_grid(drv ~ cyl)&lt;/code&gt; mean? How do they relate to this plot?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_point(mapping = aes(x = drv, y = cyl))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_point(mapping = aes(x = hwy, y = cty)) +
  facet_grid(drv ~ cyl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-20-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The empty cells (facets) in this plot are combinations of &lt;code&gt;drv&lt;/code&gt; and &lt;code&gt;cyl&lt;/code&gt; that have no observations. These are the same locations in the scatter plot of &lt;code&gt;drv&lt;/code&gt; and &lt;code&gt;cyl&lt;/code&gt; that have no points.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_point(mapping = aes(x = drv, y = cyl))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.5.3&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.5.3&#34;&gt;
&lt;h3&gt;Exercise 3.5.3&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What plots does the following code make? What does &lt;code&gt;.&lt;/code&gt; do?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The symbol &lt;code&gt;.&lt;/code&gt; ignores that dimension when faceting. For example, &lt;code&gt;drv ~ .&lt;/code&gt; facet by values of &lt;code&gt;drv&lt;/code&gt; on the y-axis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy)) +
  facet_grid(drv ~ .)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/ex.3.5.1.4.a-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;While, &lt;code&gt;. ~ cyl&lt;/code&gt; will facet by values of &lt;code&gt;cyl&lt;/code&gt; on the x-axis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy)) +
  facet_grid(. ~ cyl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/ex.3.5.1.4.b-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.5.4&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.5.4&#34;&gt;
&lt;h3&gt;Exercise 3.5.4&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Take the first faceted plot in this section:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy)) +
  facet_wrap(~class, nrow = 2)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;What are the advantages to using faceting instead of the colour aesthetic? What are the disadvantages? How might the balance change if you had a larger dataset?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;In the following plot the &lt;code&gt;class&lt;/code&gt; variable is mapped to color.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_point(mapping = aes(x = displ, y = hwy, color = class))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Advantages of encoding &lt;code&gt;class&lt;/code&gt; with facets instead of color include the ability to encode more distinct categories. For me, it is difficult to distinguish between the colors of &lt;code&gt;&#34;midsize&#34;&lt;/code&gt; and &lt;code&gt;&#34;minivan&#34;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Given human visual perception, the max number of colors to use when encoding unordered categorical (qualitative) data is nine, and in practice, often much less than that. Displaying observations from different categories on different scales makes it difficult to directly compare values of observations across categories. However, it can make it easier to compare the shape of the relationship between the x and y variables across categories.&lt;/p&gt;
&lt;p&gt;Disadvantages of encoding the &lt;code&gt;class&lt;/code&gt; variable with facets instead of the color aesthetic include the difficulty of comparing the values of observations between categories since the observations for each category are on different plots. Using the same x- and y-scales for all facets makes it easier to compare values of observations across categories, but it is still more difficult than if they had been displayed on the same plot. Since encoding class within color also places all points on the same plot, it visualizes the unconditional relationship between the x and y variables; with facets, the unconditional relationship is no longer visualized since the points are spread across multiple plots.&lt;/p&gt;
&lt;p&gt;The benefit of encoding a variable with facetting over encoding it with color increase in both the number of points and the number of categories. With a large number of points, there is often overlap. It is difficult to handle overlapping points with different colors color. Jittering will still work with color. But jittering will only work well if there are few points and the classes do not overlap much, otherwise, the colors of areas will no longer be distinct, and it will be hard to pick out the patterns of different categories visually. Transparency (&lt;code&gt;alpha&lt;/code&gt;) does not work well with colors since the mixing of overlapping transparent colors will no longer represent the colors of the categories. Binning methods already use color to encode the density of points in the bin, so color cannot be used to encode categories.&lt;/p&gt;
&lt;p&gt;As the number of categories increases, the difference between colors decreases, to the point that the color of categories will no longer be visually distinct.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.5.5&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.5.5&#34;&gt;
&lt;h3&gt;Exercise 3.5.5&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Read &lt;code&gt;?facet_wrap&lt;/code&gt;. What does &lt;code&gt;nrow&lt;/code&gt; do? What does &lt;code&gt;ncol&lt;/code&gt; do? What other options control the layout of the individual panels? Why doesn’t &lt;code&gt;facet_grid()&lt;/code&gt; have &lt;code&gt;nrow&lt;/code&gt; and &lt;code&gt;ncol&lt;/code&gt; variables?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The arguments &lt;code&gt;nrow&lt;/code&gt; (&lt;code&gt;ncol&lt;/code&gt;) determines the number of rows (columns) to use when laying out the facets. It is necessary since &lt;code&gt;facet_wrap()&lt;/code&gt; only facets on one variable.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;nrow&lt;/code&gt; and &lt;code&gt;ncol&lt;/code&gt; arguments are unnecessary for &lt;code&gt;facet_grid()&lt;/code&gt; since the number of unique values of the variables specified in the function determines the number of rows and columns.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.5.6&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.5.6&#34;&gt;
&lt;h3&gt;Exercise 3.5.6&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;When using &lt;code&gt;facet_grid()&lt;/code&gt; you should usually put the variable with more unique levels in the columns. Why?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;There will be more space for columns if the plot is laid out horizontally (landscape).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;geometric-objects&#34; class=&#34;section level2 r4ds-section&#34;&gt;
&lt;h2&gt;Geometric objects&lt;/h2&gt;
&lt;div id=&#34;exercise-3.6.1&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.6.1&#34;&gt;
&lt;h3&gt;Exercise 3.6.1&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What geom would you use to draw a line chart? A boxplot? A histogram? An area chart?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;ul&gt;
&lt;li&gt;line chart: &lt;code&gt;geom_line()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;boxplot: &lt;code&gt;geom_boxplot()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;histogram: &lt;code&gt;geom_histogram()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;area chart: &lt;code&gt;geom_area()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.6.2&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.6.2&#34;&gt;
&lt;h3&gt;Exercise 3.6.2&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
  geom_point() +
  geom_smooth(se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &amp;#39;loess&amp;#39; and formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/ex-3-6-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;This code produces a scatter plot with &lt;code&gt;displ&lt;/code&gt; on the x-axis, &lt;code&gt;hwy&lt;/code&gt; on the y-axis, and the points colored by &lt;code&gt;drv&lt;/code&gt;. There will be a smooth line, without standard errors, fit through each &lt;code&gt;drv&lt;/code&gt; group.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
  geom_point() +
  geom_smooth(se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &amp;#39;loess&amp;#39; and formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.6.3&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.6.3&#34;&gt;
&lt;h3&gt;Exercise 3.6.3&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What does &lt;code&gt;show.legend = FALSE&lt;/code&gt; do? What happens if you remove it? Why do you think I used it earlier in the chapter?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The theme option &lt;code&gt;show.legend = FALSE&lt;/code&gt; hides the legend box.&lt;/p&gt;
&lt;p&gt;Consider this example earlier in the chapter.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_smooth(
    mapping = aes(x = displ, y = hwy, colour = drv),
    show.legend = FALSE
  )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &amp;#39;loess&amp;#39; and formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In that plot, there is no legend. Removing the &lt;code&gt;show.legend&lt;/code&gt; argument or setting &lt;code&gt;show.legend = TRUE&lt;/code&gt; will result in the plot having a legend displaying the mapping between colors and &lt;code&gt;drv&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg) +
  geom_smooth(mapping = aes(x = displ, y = hwy, colour = drv))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &amp;#39;loess&amp;#39; and formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In the chapter, the legend is suppressed because with three plots, adding a legend to only the last plot would make the sizes of plots different. Different sized plots would make it more difficult to see how arguments change the appearance of the plots. The purpose of those plots is to show the difference between no groups, using a &lt;code&gt;group&lt;/code&gt; aesthetic, and using a &lt;code&gt;color&lt;/code&gt; aesthetic, which creates implicit groups. In that example, the legend isn’t necessary since looking up the values associated with each color isn’t necessary to make that point.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.6.4&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.6.4&#34;&gt;
&lt;h3&gt;Exercise 3.6.4&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What does the &lt;code&gt;se&lt;/code&gt; argument to &lt;code&gt;geom_smooth()&lt;/code&gt; do?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;It adds standard error bands to the lines.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
  geom_point() +
  geom_smooth(se = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &amp;#39;loess&amp;#39; and formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;By default &lt;code&gt;se = TRUE&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy, colour = drv)) +
  geom_point() +
  geom_smooth()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &amp;#39;loess&amp;#39; and formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-28-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.6.5&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.6.5&#34;&gt;
&lt;h3&gt;Exercise 3.6.5&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Will these two graphs look different? Why/why not?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
  geom_point() +
  geom_smooth()

ggplot() +
  geom_point(data = mpg, mapping = aes(x = displ, y = hwy)) +
  geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;No. Because both &lt;code&gt;geom_point()&lt;/code&gt; and &lt;code&gt;geom_smooth()&lt;/code&gt; will use the same data and mappings. They will inherit those options from the &lt;code&gt;ggplot()&lt;/code&gt; object, so the mappings don’t need to specified again.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
  geom_point() +
  geom_smooth()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &amp;#39;loess&amp;#39; and formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-30-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_point(data = mpg, mapping = aes(x = displ, y = hwy)) +
  geom_smooth(data = mpg, mapping = aes(x = displ, y = hwy))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &amp;#39;loess&amp;#39; and formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-31-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.6.6&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.6.6&#34;&gt;
&lt;h3&gt;Exercise 3.6.6&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Recreate the R code necessary to generate the following graphs.&lt;/p&gt;
&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;insert the figures from the book later&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The following code will generate those plots.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point() +
  geom_smooth(se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-32-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_smooth(mapping = aes(group = drv), se = FALSE) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-33-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy, colour = drv)) +
  geom_point() +
  geom_smooth(se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-34-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(colour = drv)) +
  geom_smooth(se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-35-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(aes(colour = drv)) +
  geom_smooth(aes(linetype = drv), se = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using method = &amp;#39;loess&amp;#39; and formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-36-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point(size = 4, color = &amp;quot;white&amp;quot;) +
  geom_point(aes(colour = drv))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-37-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;statistical-transformations&#34; class=&#34;section level2 r4ds-section&#34;&gt;
&lt;h2&gt;Statistical transformations&lt;/h2&gt;
&lt;div id=&#34;exercise-3.7.1&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.7.1&#34;&gt;
&lt;h3&gt;Exercise 3.7.1&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What is the default geom associated with &lt;code&gt;stat_summary()&lt;/code&gt;? How could you rewrite the previous plot to use that geom function instead of the stat function?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The “previous plot” referred to in the question is the following.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = diamonds) +
  stat_summary(
    mapping = aes(x = cut, y = depth),
    fun.min = min,
    fun.max = max,
    fun = median
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-38-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The arguments &lt;code&gt;fun.ymin&lt;/code&gt;, &lt;code&gt;fun.ymax&lt;/code&gt;, and &lt;code&gt;fun.y&lt;/code&gt; have been deprecated and replaced with &lt;code&gt;fun.min&lt;/code&gt;, &lt;code&gt;fun.max&lt;/code&gt;, and &lt;code&gt;fun&lt;/code&gt; in ggplot2 v 3.3.0.&lt;/p&gt;
&lt;p&gt;The default geom for &lt;a href=&#34;https://ggplot2.tidyverse.org/reference/stat_summary.html&#34;&gt;&lt;code&gt;stat_summary()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;geom_pointrange()&lt;/code&gt;. The default stat for &lt;a href=&#34;https://ggplot2.tidyverse.org/reference/geom_linerange.html&#34;&gt;&lt;code&gt;geom_pointrange()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;identity()&lt;/code&gt; but we can add the argument &lt;code&gt;stat = &#34;summary&#34;&lt;/code&gt; to use &lt;code&gt;stat_summary()&lt;/code&gt; instead of &lt;code&gt;stat_identity()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = diamonds) +
  geom_pointrange(
    mapping = aes(x = cut, y = depth),
    stat = &amp;quot;summary&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## No summary function supplied, defaulting to `mean_se()`&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-39-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The resulting message says that &lt;code&gt;stat_summary()&lt;/code&gt; uses the &lt;code&gt;mean&lt;/code&gt; and &lt;code&gt;sd&lt;/code&gt; to calculate the middle point and endpoints of the line. However, in the original plot the min and max values were used for the endpoints. To recreate the original plot we need to specify values for &lt;code&gt;fun.min&lt;/code&gt;, &lt;code&gt;fun.max&lt;/code&gt;, and &lt;code&gt;fun&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = diamonds) +
  geom_pointrange(
    mapping = aes(x = cut, y = depth),
    stat = &amp;quot;summary&amp;quot;,
    fun.min = min,
    fun.max = max,
    fun = median
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-40-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.7.2&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.7.2&#34;&gt;
&lt;h3&gt;Exercise 3.7.2&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What does &lt;code&gt;geom_col()&lt;/code&gt; do? How is it different to &lt;code&gt;geom_bar()&lt;/code&gt;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The &lt;code&gt;geom_col()&lt;/code&gt; function has different default stat than &lt;code&gt;geom_bar()&lt;/code&gt;. The default stat of &lt;code&gt;geom_col()&lt;/code&gt; is &lt;code&gt;stat_identity()&lt;/code&gt;, which leaves the data as is. The &lt;code&gt;geom_col()&lt;/code&gt; function expects that the data contains &lt;code&gt;x&lt;/code&gt; values and &lt;code&gt;y&lt;/code&gt; values which represent the bar height.&lt;/p&gt;
&lt;p&gt;The default stat of &lt;code&gt;geom_bar()&lt;/code&gt; is &lt;code&gt;stat_count()&lt;/code&gt;. The &lt;code&gt;geom_bar()&lt;/code&gt; function only expects an &lt;code&gt;x&lt;/code&gt; variable. The stat, &lt;code&gt;stat_count()&lt;/code&gt;, preprocesses input data by counting the number of observations for each value of &lt;code&gt;x&lt;/code&gt;. The &lt;code&gt;y&lt;/code&gt; aesthetic uses the values of these counts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.7.3&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.7.3&#34;&gt;
&lt;h3&gt;Exercise 3.7.3&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Most geoms and stats come in pairs that are almost always used in concert. Read through the documentation and make a list of all the pairs. What do they have in common?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The following tables lists the pairs of geoms and stats that are almost always used in concert.&lt;/p&gt;
&lt;table&gt;
&lt;caption&gt;Complementary geoms and stats&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;geom&lt;/th&gt;
&lt;th&gt;stat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_bar()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_count()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_bin2d()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_bin_2d()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_boxplot()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_boxplot()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_contour_filled()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_contour_filled()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_contour()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_contour()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_count()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_sum()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_density_2d()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_density_2d()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_density()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_density()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_dotplot()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_bindot()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_function()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_function()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_sf()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_sf()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_sf()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_sf()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_smooth()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_smooth()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_violin()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_ydensity()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_hex()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_bin_hex()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_qq_line()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_qq_line()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_qq()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_qq()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;&lt;code&gt;geom_quantile()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;stat_quantile()&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These pairs of geoms and stats tend to have their names in common, such &lt;code&gt;stat_smooth()&lt;/code&gt; and &lt;code&gt;geom_smooth()&lt;/code&gt; and be documented on the same help page. The pairs of geoms and stats that are used in concert often have each other as the default stat (for a geom) or geom (for a stat).&lt;/p&gt;
&lt;p&gt;The following tables contain the geoms and stats in &lt;a href=&#34;https://ggplot2.tidyverse.org/reference/&#34;&gt;ggplot2&lt;/a&gt; and their defaults as of version 3.3.0. Many geoms have &lt;code&gt;stat_identity()&lt;/code&gt; as the default stat.&lt;/p&gt;
&lt;table&gt;
&lt;caption&gt;ggplot2 geom layers and their default stats.&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;geom&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;default stat&lt;/th&gt;
&lt;th&gt;shared docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_abline()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_area()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_bar()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_count()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_bin2d()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_bin_2d()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_blank()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;None&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_boxplot()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_boxplot()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_col()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_count()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_sum()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_countour_filled()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_countour_filled()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_countour()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_countour()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_crossbar()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_curve()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_density_2d_filled()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_density_2d_filled()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_density_2d()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_density_2d()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_density()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_density()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_dotplot()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_bindot()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_errorbar()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_errorbarh()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_freqpoly()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_bin()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_function()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_function()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_hex()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_bin_hex()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_histogram()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_bin()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_hline()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_jitter()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_label()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_line()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_linerange()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_map()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_path()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_point()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_pointrange()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_polygon()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_qq_line()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_qq_line()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_qq()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_qq()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_quantile()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_quantile()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_raster()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_rect()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_ribbon()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_rug()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_segment()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_sf_label()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_sf_coordinates()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_sf_text()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_sf_coordinates()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_sf()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_sf()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_smooth()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_smooth()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_spoke()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_step()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_text()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_tile()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_violin()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_ydensity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_vline()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;caption&gt;ggplot2 stat layers and their default geoms.&lt;/caption&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;stat&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;default geom&lt;/th&gt;
&lt;th&gt;shared docs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_bin_2d()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_tile()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_bin_hex()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_hex()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_bin()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_bar()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_boxplot()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_boxplot()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_count()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_bar()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_countour_filled()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_contour_filled()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_countour()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_contour()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_density_2d_filled()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_density_2d()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_density_2d()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_density_2d()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_density()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_area()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_ecdf()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_step()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_ellipse()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_path()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_function()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_function()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_function()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_path()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_identity()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_point()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_qq_line()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_path()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_qq()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_point()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_quantile()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_quantile()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_sf_coordinates()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_point()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_sf()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_rect()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_smooth()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_smooth()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_sum()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_point()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_summary_2d()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_tile()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_summary_bin()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_pointrange()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_summary_hex()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_hex()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_summary()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_pointrange()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_unique()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_point()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;stat_ydensity()&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;geom_violin()&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.7.4&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.7.4&#34;&gt;
&lt;h3&gt;Exercise 3.7.4&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What variables does &lt;code&gt;stat_smooth()&lt;/code&gt; compute? What parameters control its behavior?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The function &lt;code&gt;stat_smooth()&lt;/code&gt; calculates the following variables:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;: predicted value&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ymin&lt;/code&gt;: lower value of the confidence interval&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ymax&lt;/code&gt;: upper value of the confidence interval&lt;/li&gt;
&lt;li&gt;&lt;code&gt;se&lt;/code&gt;: standard error&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The “Computed Variables” section of the &lt;code&gt;stat_smooth()&lt;/code&gt; documentation contains these variables.&lt;/p&gt;
&lt;p&gt;The parameters that control the behavior of &lt;code&gt;stat_smooth()&lt;/code&gt; include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;method&lt;/code&gt;: This is the method used to compute the smoothing line. If &lt;code&gt;NULL&lt;/code&gt;, a default method is used based on the sample size: &lt;code&gt;stats::loess()&lt;/code&gt; when there are less than 1,000 observations in a group, and &lt;code&gt;mgcv::gam()&lt;/code&gt; with &lt;code&gt;formula = y ~ s(x, bs = &#34;CS)&lt;/code&gt; otherwise. Alternatively, the user can provide a character vector with a function name, e.g. &lt;code&gt;&#34;lm&#34;&lt;/code&gt;, &lt;code&gt;&#34;loess&#34;&lt;/code&gt;, or a function, e.g. &lt;code&gt;MASS::rlm&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;formula&lt;/code&gt;: When providing a custom &lt;code&gt;method&lt;/code&gt; argument, the formula to use. The default is &lt;code&gt;y ~ x&lt;/code&gt;. For example, to use the line implied by &lt;code&gt;lm(y ~ x + I(x ^ 2) + I(x ^ 3))&lt;/code&gt;, use &lt;code&gt;method = &#34;lm&#34;&lt;/code&gt; or &lt;code&gt;method = lm&lt;/code&gt; and &lt;code&gt;formula = y ~ x + I(x ^ 2) + I(x ^ 3)&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;method.arg()&lt;/code&gt;: Arguments other than than the formula, which is already specified in the &lt;code&gt;formula&lt;/code&gt; argument&lt;code&gt;, to pass to the function in&lt;/code&gt;method`.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;se&lt;/code&gt;: If &lt;code&gt;TRUE&lt;/code&gt;, display standard error bands, if &lt;code&gt;FALSE&lt;/code&gt; only display the line.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;na.rm&lt;/code&gt;: If &lt;code&gt;FALSE&lt;/code&gt;, missing values are removed with a warning, if &lt;code&gt;TRUE&lt;/code&gt; the are silently removed. The default is &lt;code&gt;FALSE&lt;/code&gt; in order to make debugging easier. If missing values are known to be in the data, then can be ignored, but if missing values are not anticipated this warning can help catch errors.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TODO:&lt;/strong&gt; Plots with examples illustrating the uses of these arguments.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.7.5&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.7.5&#34;&gt;
&lt;h3&gt;Exercise 3.7.5&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;In our proportion bar chart, we need to set &lt;code&gt;group = 1&lt;/code&gt; Why? In other words, what is the problem with these two graphs?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;If &lt;code&gt;group = 1&lt;/code&gt; is not included, then all the bars in the plot will have the same height, a height of 1. The function &lt;code&gt;geom_bar()&lt;/code&gt; assumes that the groups are equal to the &lt;code&gt;x&lt;/code&gt; values since the stat computes the counts within the group.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = diamonds) +
  geom_bar(mapping = aes(x = cut, y = ..prop..))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-41-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The problem with these two plots is that the proportions are calculated within the groups.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = diamonds) +
  geom_bar(mapping = aes(x = cut, y = ..prop..))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-42-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = diamonds) +
  geom_bar(mapping = aes(x = cut, fill = color, y = ..prop..))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-42-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The following code will produce the intended stacked bar charts for the case with no &lt;code&gt;fill&lt;/code&gt; aesthetic.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = diamonds) +
  geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-43-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;With the &lt;code&gt;fill&lt;/code&gt; aesthetic, the heights of the bars need to be normalized.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = diamonds) + 
  geom_bar(aes(x = cut, y = ..count.. / sum(..count..), fill = color))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-44-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;position-adjustments&#34; class=&#34;section level2 r4ds-section&#34;&gt;
&lt;h2&gt;Position adjustments&lt;/h2&gt;
&lt;div id=&#34;exercise-3.8.1&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.8.1&#34;&gt;
&lt;h3&gt;Exercise 3.8.1&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What is the problem with this plot? How could you improve it?&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_point()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-45-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;There is overplotting because there are multiple observations for each combination of &lt;code&gt;cty&lt;/code&gt; and &lt;code&gt;hwy&lt;/code&gt; values.&lt;/p&gt;
&lt;p&gt;I would improve the plot by using a jitter position adjustment to decrease overplotting.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_point(position = &amp;quot;jitter&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-46-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The relationship between &lt;code&gt;cty&lt;/code&gt; and &lt;code&gt;hwy&lt;/code&gt; is clear even without jittering the points but jittering shows the locations where there are more observations.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.8.2&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.8.2&#34;&gt;
&lt;h3&gt;Exercise 3.8.2&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What parameters to &lt;code&gt;geom_jitter()&lt;/code&gt; control the amount of jittering?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;From the &lt;a href=&#34;https://ggplot2.tidyverse.org/reference/geom_jitter.html&#34;&gt;&lt;code&gt;geom_jitter()&lt;/code&gt;&lt;/a&gt; documentation, there are two arguments to jitter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;width&lt;/code&gt; controls the amount of horizontal displacement, and&lt;/li&gt;
&lt;li&gt;&lt;code&gt;height&lt;/code&gt; controls the amount of vertical displacement.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The defaults values of &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; will introduce noise in both directions. Here is what the plot looks like with the default values of &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_point(position = position_jitter())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-47-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, we can change these parameters. Here are few a examples to understand how these parameters affect the amount of jittering. When&lt;code&gt;width = 0&lt;/code&gt; there is no horizontal jitter.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_jitter(width = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-48-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;width = 20&lt;/code&gt;, there is too much horizontal jitter.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_jitter(width = 20)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-49-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;height = 0&lt;/code&gt;, there is no vertical jitter.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_jitter(height = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-50-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;height = 15&lt;/code&gt;, there is too much vertical jitter.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_jitter(height = 15)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-51-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;When &lt;code&gt;width = 0&lt;/code&gt; and &lt;code&gt;height = 0&lt;/code&gt;, there is neither horizontal or vertical jitter, and the plot produced is identical to the one produced with &lt;code&gt;geom_point()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_jitter(height = 0, width = 0)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-52-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Note that the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; arguments are in the units of the data. Thus &lt;code&gt;height = 1&lt;/code&gt; (&lt;code&gt;width = 1&lt;/code&gt;) corresponds to different relative amounts of jittering depending on the scale of the &lt;code&gt;y&lt;/code&gt; (&lt;code&gt;x&lt;/code&gt;) variable. The default values of &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; are defined to be 80% of the &lt;code&gt;resolution()&lt;/code&gt; of the data, which is the smallest non-zero distance between adjacent values of a variable. When &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; are discrete variables, their resolutions are both equal to 1, and &lt;code&gt;height = 0.4&lt;/code&gt; and &lt;code&gt;width = 0.4&lt;/code&gt; since the jitter moves points in both positive and negative directions.&lt;/p&gt;
&lt;p&gt;The default values of &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; in &lt;code&gt;geom_jitter()&lt;/code&gt; are non-zero, so unless both &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; are explicitly set set 0, there will be some jitter.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_jitter()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-53-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.8.3&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.8.3&#34;&gt;
&lt;h3&gt;Exercise 3.8.3&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Compare and contrast &lt;code&gt;geom_jitter()&lt;/code&gt; with &lt;code&gt;geom_count()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The geom &lt;code&gt;geom_jitter()&lt;/code&gt; adds random variation to the locations points of the graph. In other words, it “jitters” the locations of points slightly. This method reduces overplotting since two points with the same location are unlikely to have the same random variation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_jitter()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-54-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;However, the reduction in overlapping comes at the cost of slightly changing the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values of the points.&lt;/p&gt;
&lt;p&gt;The geom &lt;code&gt;geom_count()&lt;/code&gt; sizes the points relative to the number of observations. Combinations of (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) values with more observations will be larger than those with fewer observations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_count()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-55-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;geom_count()&lt;/code&gt; geom does not change &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinates of the points. However, if the points are close together and counts are large, the size of some points can itself create overplotting. For example, in the following example, a third variable mapped to color is added to the plot. In this case, &lt;code&gt;geom_count()&lt;/code&gt; is less readable than &lt;code&gt;geom_jitter()&lt;/code&gt; when adding a third variable as a color aesthetic.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy, color = class)) +
  geom_jitter()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-56-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy, color = class)) +
  geom_count()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-57-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Combining &lt;code&gt;geom_count()&lt;/code&gt; with jitter, which is specified with the &lt;code&gt;position&lt;/code&gt; argument to &lt;code&gt;geom_count()&lt;/code&gt; rather than its own geom, helps overplotting a little.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = cty, y = hwy, color = class)) +
  geom_count(position = &amp;quot;jitter&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-58-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;But as this example shows, unfortunately, there is no universal solution to overplotting. The costs and benefits of different approaches will depend on the structure of the data and the goal of the data scientist.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.8.4&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.8.4&#34;&gt;
&lt;h3&gt;Exercise 3.8.4&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What’s the default position adjustment for &lt;code&gt;geom_boxplot()&lt;/code&gt;? Create a visualization of the &lt;code&gt;mpg&lt;/code&gt; dataset that demonstrates it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The default position for &lt;code&gt;geom_boxplot()&lt;/code&gt; is &lt;code&gt;&#34;dodge2&#34;&lt;/code&gt;, which is a shortcut for &lt;code&gt;position_dodge2&lt;/code&gt;. This position adjustment does not change the vertical position of a geom but moves the geom horizontally to avoid overlapping other geoms. See the documentation for &lt;a href=&#34;https://ggplot2.tidyverse.org/reference/position_dodge.html&#34;&gt;&lt;code&gt;position_dodge2()&lt;/code&gt;&lt;/a&gt; for additional discussion on how it works.&lt;/p&gt;
&lt;p&gt;When we add &lt;code&gt;colour = class&lt;/code&gt; to the box plot, the different levels of the &lt;code&gt;drv&lt;/code&gt; variable are placed side by side, i.e., dodged.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, aes(x = drv, y = hwy, colour = class)) +
  geom_boxplot()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-59-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;position_identity()&lt;/code&gt; is used the boxplots overlap.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, aes(x = drv, y = hwy, colour = class)) +
  geom_boxplot(position = &amp;quot;identity&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-60-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;coordinate-systems&#34; class=&#34;section level2 r4ds-section&#34;&gt;
&lt;h2&gt;Coordinate systems&lt;/h2&gt;
&lt;div id=&#34;exercise-3.9.1&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.9.1&#34;&gt;
&lt;h3&gt;Exercise 3.9.1&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;Turn a stacked bar chart into a pie chart using &lt;code&gt;coord_polar()&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;A pie chart is a stacked bar chart with the addition of polar coordinates. Take this stacked bar chart with a single category.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = factor(1), fill = drv)) +
  geom_bar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-61-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now add &lt;code&gt;coord_polar(theta=&#34;y&#34;)&lt;/code&gt; to create pie chart.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = factor(1), fill = drv)) +
  geom_bar(width = 1) +
  coord_polar(theta = &amp;quot;y&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-62-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The argument &lt;code&gt;theta = &#34;y&#34;&lt;/code&gt; maps &lt;code&gt;y&lt;/code&gt; to the angle of each section. If &lt;code&gt;coord_polar()&lt;/code&gt; is specified without &lt;code&gt;theta = &#34;y&#34;&lt;/code&gt;, then the resulting plot is called a bulls-eye chart.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(mpg, aes(x = factor(1), fill = drv)) +
  geom_bar(width = 1) +
  coord_polar()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-63-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.9.2&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.9.2&#34;&gt;
&lt;h3&gt;Exercise 3.9.2&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What does &lt;code&gt;labs()&lt;/code&gt; do? Read the documentation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The &lt;code&gt;labs&lt;/code&gt; function adds axis titles, plot titles, and a caption to the plot.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
  geom_boxplot() +
  coord_flip() +
  labs(y = &amp;quot;Highway MPG&amp;quot;,
       x = &amp;quot;Class&amp;quot;,
       title = &amp;quot;Highway MPG by car class&amp;quot;,
       subtitle = &amp;quot;1999-2008&amp;quot;,
       caption = &amp;quot;Source: http://fueleconomy.gov&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-64-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The arguments to &lt;code&gt;labs()&lt;/code&gt; are optional, so you can add as many or as few of these as are needed.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data = mpg, mapping = aes(x = class, y = hwy)) +
  geom_boxplot() +
  coord_flip() +
  labs(y = &amp;quot;Highway MPG&amp;quot;,
       x = &amp;quot;Year&amp;quot;,
       title = &amp;quot;Highway MPG by car class&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-65-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;labs()&lt;/code&gt; function is not the only function that adds titles to plots. The &lt;code&gt;xlab()&lt;/code&gt;, &lt;code&gt;ylab()&lt;/code&gt;, and x- and y-scale functions can add axis titles. The &lt;code&gt;ggtitle()&lt;/code&gt; function adds plot titles.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.9.3&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.9.3&#34;&gt;
&lt;h3&gt;Exercise 3.9.3&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What’s the difference between &lt;code&gt;coord_quickmap()&lt;/code&gt; and &lt;code&gt;coord_map()&lt;/code&gt;?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The &lt;code&gt;coord_map()&lt;/code&gt; function uses map projections to project the three-dimensional Earth onto a two-dimensional plane. By default, &lt;code&gt;coord_map()&lt;/code&gt; uses the &lt;a href=&#34;https://en.wikipedia.org/wiki/Mercator_projection&#34;&gt;Mercator projection&lt;/a&gt;. This projection is applied to all the geoms in the plot. The &lt;code&gt;coord_quickmap()&lt;/code&gt; function uses an approximate but faster map projection. This approximation ignores the curvature of Earth and adjusts the map for the latitude/longitude ratio. The &lt;code&gt;coord_quickmap()&lt;/code&gt; project is faster than &lt;code&gt;coord_map()&lt;/code&gt; both because the projection is computationally easier, and unlike &lt;code&gt;coord_map()&lt;/code&gt;, the coordinates of the individual geoms do not need to be transformed.&lt;/p&gt;
&lt;p&gt;See the &lt;a href=&#34;https://ggplot2.tidyverse.org/reference/coord_map.html&#34;&gt;coord_map()&lt;/a&gt; documentation for more information on these functions and some examples.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;exercise-3.9.4&#34; class=&#34;section level3 unnumbered exercise&#34; data-number=&#34;3.9.4&#34;&gt;
&lt;h3&gt;Exercise 3.9.4&lt;/h3&gt;
&lt;div class=&#34;question&#34;&gt;
&lt;p&gt;What does the plot below tell you about the relationship between city and highway mpg? Why is &lt;code&gt;coord_fixed()&lt;/code&gt; important? What does &lt;code&gt;geom_abline()&lt;/code&gt; do?&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;answer&#34;&gt;
&lt;p&gt;The function &lt;code&gt;coord_fixed()&lt;/code&gt; ensures that the line produced by &lt;code&gt;geom_abline()&lt;/code&gt; is at a 45-degree angle. A 45-degree line makes it easy to compare the highway and city mileage to the case in which city and highway MPG were equal.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
  geom_point() +
  geom_abline()
p + coord_fixed()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-66-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If we didn’t include &lt;code&gt;coord_fixed()&lt;/code&gt;, then the line would no longer have an angle of 45 degrees.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://ianadamsresearch.com/courses/PUBPL-6002/2020-12-28-chapter-3/index.en_files/figure-html/unnamed-chunk-67-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;On average, humans are best able to perceive differences in angles relative to 45 degrees. See &lt;span class=&#34;citation&#34;&gt;@Cleveland1993&lt;/span&gt;, &lt;span class=&#34;citation&#34;&gt;@Cleveland1994&lt;/span&gt;,&lt;span class=&#34;citation&#34;&gt;@Cleveland1993a&lt;/span&gt;, &lt;span class=&#34;citation&#34;&gt;@ClevelandMcGillMcGill1988&lt;/span&gt;, &lt;span class=&#34;citation&#34;&gt;@HeerAgrawala2006&lt;/span&gt; for discussion on how the aspect ratio of a plot affects perception of the values it encodes, evidence that 45-degrees is generally the optimal aspect ratio, and methods to calculate the optimal aspect ratio of a plot. The function &lt;code&gt;ggthemes::bank_slopes()&lt;/code&gt; will calculate the optimal aspect ratio to bank slopes to 45-degrees.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34;&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li id=&#34;fn1&#34;&gt;&lt;p&gt;Internally, this is what the &lt;code&gt;factor&lt;/code&gt; class, which is covered in &lt;a href=&#34;https://r4ds.had.co.nz/factors.html&#34;&gt;Chapter 15&lt;/a&gt;, does.&lt;a href=&#34;#fnref1&#34; class=&#34;footnote-back&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>SPSS Cheat Sheet</title>
      <link>https://ianadamsresearch.com/courses/pubpl-6002/spss-cheat/</link>
      <pubDate>Mon, 28 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://ianadamsresearch.com/courses/pubpl-6002/spss-cheat/</guid>
      <description>
&lt;script src=&#34;https://ianadamsresearch.com/courses/pubpl-6002/spss-cheat/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;

&lt;/div&gt;

&lt;div id=&#34;spss-cheat-sheet&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;SPSS Cheat Sheet&lt;/h1&gt;
&lt;p&gt;This contains some of the most common SPSS procedures for basic data analysis.&lt;/p&gt;
&lt;div id=&#34;data-cleaning&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Cleaning&lt;/h2&gt;
&lt;div id=&#34;missing-data-counts&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Missing Data Counts&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyse&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Descriptive Statistics&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Frequencies&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the variable(s)&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Continue&lt;/code&gt; and then &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Missing data counts will be at the top of the resulting output.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;edit-variable-name&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Edit Variable Name&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Transform&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Recode into Same Variables...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the variable to transform and move it into the right column.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Old and New Values...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;Old Value&lt;/code&gt;, enter either a specific value you would like to replace or a set of values you would
like to replace.&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;New Value&lt;/code&gt;, enter what the replacement value should be.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Add&lt;/code&gt; under &lt;code&gt;New Value&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Continue&lt;/code&gt; and then &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;create-a-variable&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Create a Variable&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Transform&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Compute Variable...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Type and Label...&lt;/code&gt; to set the variable type, then click &lt;code&gt;Continue&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Enter the value for the variable. If it is a string, include the value in quotes.&lt;/li&gt;
&lt;li&gt;Or just enter a formula for the variable based on the existing variables.&lt;/li&gt;
&lt;li&gt;Click“&lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;delete-a-variable&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Delete a Variable&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Right-click on the column header&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Clear&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; This does not produce a syntax in the Output window. The syntax for deleting a variable is here, in case you
are saving your syntax:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DELETE VARIABLES [list of variables, separated by spaces].&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;drop-observations-based-on-some-condition-keep-observations-meeting-the-opposite&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Drop observations based on some condition (Keep observations meeting the opposite)&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Data&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Select Cases...&lt;/code&gt; &amp;gt;&amp;gt; Select &lt;code&gt;If condition is satisfied&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;If...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter the condition based on which observations you would like to keep, then click &lt;code&gt;Continue&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Delete unselected cases&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You can specify multiple conditions at the same time by separating them with &lt;code&gt;AND&lt;/code&gt; or &lt;code&gt;OR.&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;merging-datasets&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Merging datasets&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Data&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Merge Files&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Add Variables...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Note that the datasets you are merging must already be saved as SPSS (.sav) format files. In addition,
the variables you are matching on must have the same name across datasets.&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;An external SPSS statistics data file&lt;/code&gt;, browse for your file, and select it.&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;Match cases on key variables&lt;/code&gt;, click on the matching variable, and add it to &lt;code&gt;Key Variables&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;appending-datasets&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Appending datasets&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Data&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Merge Files&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Add Cases...&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Note that the datasets you are merging must already be saved as SPSS (.sav) format files. In addition,
the variables you are matching on must have the same name across datasets.&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;An external SPSS statistics data file&lt;/code&gt;, browse for your file, and select it.&lt;/li&gt;
&lt;li&gt;All variables already in both datasets will appear in &lt;code&gt;Variables in New Active Dataset&lt;/code&gt;, and variables
not in both datasets will be in &lt;code&gt;Unpaired Variables&lt;/code&gt;. Move all unpaired variables you want into the
right column.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;descriptive-statistics&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Descriptive Statistics&lt;/h2&gt;
&lt;div id=&#34;central-tendency-mean-median-and-mode-for-continuous-variable&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Central tendency: mean, median, and mode (for continuous variable)&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Descriptive Statistics&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Frequencies&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the continuous variable(s)&lt;/li&gt;
&lt;li&gt;Uncheck &lt;code&gt;Display frequency tables&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Statistics...&lt;/code&gt; and check the desired central tendency measures&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Continue&lt;/code&gt; and then &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;central-tendency-mode-and-frequency-table-for-categorical-variable&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Central tendency: mode and frequency table (for categorical variable)&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Descriptive Statistics&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Frequencies&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the categorical variable(s)&lt;/li&gt;
&lt;li&gt;Check &lt;code&gt;Display frequency tables&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Format&lt;/code&gt; and select &lt;code&gt;Descending counts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Continue&lt;/code&gt; and then &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The top item in the frequency table is the mode. Note that if multiple categorical variables are selected, a
separate frequency table will be created for each variable.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;variability-standard-deviation-variance-and-range-for-continuous-variable&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Variability: Standard deviation, variance, and range (for continuous variable)&lt;/h3&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Descriptive Statistics&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Descriptives&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the continuous variable(s)&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Options&lt;/code&gt; and select the desired measures of spread&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Continue&lt;/code&gt; and then &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;common-analyses&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Common Analyses&lt;/h2&gt;
&lt;div id=&#34;correlations&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Correlations&lt;/h3&gt;
&lt;div id=&#34;pearson-correlation&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Pearson correlation:&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Correlate&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Bivariate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select Pearson under Correlation Coefficients box, select the variables, click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;spearman-correlation-coefficient&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Spearman correlation coefficient:&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Correlate&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Bivariate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select Spearman under Correlation Coefficient box, select the variables, click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;linear-regression&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Linear Regression&lt;/h3&gt;
&lt;div id=&#34;simple-linear-regression&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Simple Linear Regression:&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Regression&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Linear&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter IV and DV, Click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;multiple-linear-regression&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Multiple Linear Regression:&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Regression&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Linear&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select IVs and DV, Click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;t-test&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;T-Test&lt;/h3&gt;
&lt;div id=&#34;single-sample-t-test&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Single-Sample T-test:&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Compare Means&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;One-Sample T-test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter variables, click OK&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;independent-samples-t-test&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Independent Samples T-test:&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Compare Means&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Independent Samples T test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter DV (Test Variable) and IV (Grouping variable), Define Groups, and enter the values of the two levels of the IV, click &lt;code&gt;continue&lt;/code&gt;, click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;paired-samples-t-test&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Paired Samples T-Test:&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Compare Means&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Paired Samples T Test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on two paired variables to move to Current Selections area, then click right arrowto move to Paired Variables Section, Click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;anovas&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;ANOVAs&lt;/h3&gt;
&lt;div id=&#34;oneway-anova&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Oneway ANOVA:&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Compare Means&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;One-Way ANOVA&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter IV in Factor box, Enter DV to Dependent List box, click &lt;code&gt;Options&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Descriptive&lt;/code&gt; to get means in output Click continue, click OK&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;factorial-anova-2x2-2x2x3-etc.&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Factorial Anova (2x2, 2x2x3, etc.):&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;General Linear Model&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Univariate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select DV for Dependent Variable blank and IVs for the Fixed Factors box, click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;repeated-measures-anova&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Repeated Measures ANOVA:&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;code&gt;Analyze&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;General Linear Model&lt;/code&gt; &amp;gt;&amp;gt; &lt;code&gt;Repeated Measures&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter factors and number of levels &amp;gt;&amp;gt; click &lt;code&gt;Add&lt;/code&gt; &amp;gt;&amp;gt; once all factors are entered click &lt;code&gt;define&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Define variables using the arrows, click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;mixed-design-anova&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Mixed-Design ANOVA:&lt;/h4&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;Follow same steps as repeated measures&lt;/li&gt;
&lt;li&gt;Add between-subjects factor to “Between-Subjects Factor” box, click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
